[{"/home/artur/Documents/blog/web-client/src/index.js":"1","/home/artur/Documents/blog/web-client/src/App.js":"2","/home/artur/Documents/blog/web-client/src/PostCreate.js":"3","/home/artur/Documents/blog/web-client/src/PostList.js":"4","/home/artur/Documents/blog/web-client/src/CommentCreate.js":"5","/home/artur/Documents/blog/web-client/src/CommentList.js":"6"},{"size":152,"mtime":1611749539068,"results":"7","hashOfConfig":"8"},{"size":345,"mtime":1611752949730,"results":"9","hashOfConfig":"8"},{"size":858,"mtime":1611751194442,"results":"10","hashOfConfig":"8"},{"size":1035,"mtime":1611754576186,"results":"11","hashOfConfig":"8"},{"size":866,"mtime":1611754251166,"results":"12","hashOfConfig":"8"},{"size":614,"mtime":1611754528138,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"158f6x3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/artur/Documents/blog/web-client/src/index.js",[],["28","29"],"/home/artur/Documents/blog/web-client/src/App.js",[],"/home/artur/Documents/blog/web-client/src/PostCreate.js",[],"/home/artur/Documents/blog/web-client/src/PostList.js",[],"/home/artur/Documents/blog/web-client/src/CommentCreate.js",[],"/home/artur/Documents/blog/web-client/src/CommentList.js",["30"],"/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport default ({ postId }) => {\n    const [comments, setComments] = useState([]);\n\n    const fetchData = async () => {\n        const res = await axios.get(`http://localhost:4001/posts/${postId}/comments`)\n\n        setComments(res.data);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const renderedComments = comments.map(comment => {\n        return <li key={comment.id}> {comment.content} </li>\n    });\n\n    return <ul>\n        {renderedComments}\n    </ul>\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":16,"column":8,"nodeType":"37","endLine":16,"endColumn":10,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [fetchData]",{"range":"44","text":"45"},[429,431],"[fetchData]"]